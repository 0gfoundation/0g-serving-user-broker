"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LedgerManager__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "LedgerExists",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "LedgerNotExists",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256[2]",
                name: "inferenceSigner",
                type: "uint256[2]",
            },
            {
                internalType: "string",
                name: "additionalInfo",
                type: "string",
            },
        ],
        name: "addLedger",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "deleteLedger",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "depositFund",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "fineTuningAddress",
        outputs: [
            {
                internalType: "address payable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getAllLedgers",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "user",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "availableBalance",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "totalBalance",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256[2]",
                        name: "inferenceSigner",
                        type: "uint256[2]",
                    },
                    {
                        internalType: "string",
                        name: "additionalInfo",
                        type: "string",
                    },
                    {
                        internalType: "address[]",
                        name: "inferenceProviders",
                        type: "address[]",
                    },
                    {
                        internalType: "address[]",
                        name: "fineTuningProviders",
                        type: "address[]",
                    },
                ],
                internalType: "struct Ledger[]",
                name: "ledgers",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "getLedger",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "user",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "availableBalance",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "totalBalance",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256[2]",
                        name: "inferenceSigner",
                        type: "uint256[2]",
                    },
                    {
                        internalType: "string",
                        name: "additionalInfo",
                        type: "string",
                    },
                    {
                        internalType: "address[]",
                        name: "inferenceProviders",
                        type: "address[]",
                    },
                    {
                        internalType: "address[]",
                        name: "fineTuningProviders",
                        type: "address[]",
                    },
                ],
                internalType: "struct Ledger",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "inferenceAddress",
        outputs: [
            {
                internalType: "address payable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_inferenceAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_fineTuningAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "initialized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "refund",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
            },
            {
                internalType: "string",
                name: "serviceType",
                type: "string",
            },
        ],
        name: "retrieveFund",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "spendFund",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "string",
                name: "serviceTypeStr",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFund",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611f2b8061007e6000396000f3fe6080604052600436106100f75760003560e01c806389c0464e1161008a578063dd8a411811610059578063dd8a411814610298578063e5d9fdab146102b8578063f2fde38b146102d8578063f7cd6af9146102f857600080fd5b806389c0464e146102325780638d0d8cb6146102525780638da5cb5b1461025a578063c0c53b8b1461027857600080fd5b806331404a19116100c657806331404a191461019d578063382e1112146101bd578063715018a6146101f557806372adc0d91461020a57600080fd5b8063158ef93e146101035780631665c79b14610139578063278ecde11461015b5780632ba43b821461017d57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5060005461012490600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b34801561014557600080fd5b5061014e610325565b604051610130919061185d565b34801561016757600080fd5b5061017b6101763660046118bf565b610588565b005b34801561018957600080fd5b5061017b6101983660046119ab565b610627565b3480156101a957600080fd5b5061017b6101b8366004611a02565b610927565b3480156101c957600080fd5b506002546101dd906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b34801561020157600080fd5b5061017b610ac6565b61021d610218366004611ad1565b610ada565b60408051928352602083019190915201610130565b34801561023e57600080fd5b5061017b61024d366004611b1a565b610b2d565b61017b610d66565b34801561026657600080fd5b506000546001600160a01b03166101dd565b34801561028457600080fd5b5061017b610293366004611b35565b610de0565b3480156102a457600080fd5b5061017b6102b3366004611b78565b610eaa565b3480156102c457600080fd5b506001546101dd906001600160a01b031681565b3480156102e457600080fd5b5061017b6102f3366004611b1a565b610f2f565b34801561030457600080fd5b50610318610313366004611b1a565b610fa8565b6040516101309190611ba2565b60606000610331611177565b90508067ffffffffffffffff81111561034c5761034c6118f4565b60405190808252806020026020018201604052801561038557816020015b61037261160e565b81526020019060019003908161036a5790505b50915060005b818110156105835761039c81611188565b6040805160e08101825282546001600160a01b031681526001830154602082015260028084015482840152825180840193849052919392606085019291600385019182845b8154815260200190600101908083116103e1575050505050815260200160058201805461040d90611bb5565b80601f016020809104026020016040519081016040528092919081815260200182805461043990611bb5565b80156104865780601f1061045b57610100808354040283529160200191610486565b820191906000526020600020905b81548152906001019060200180831161046957829003601f168201915b50505050508152602001600682018054806020026020016040519081016040528092919081815260200182805480156104e857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104ca575b505050505081526020016007820180548060200260200160405190810160405280929190818152602001828054801561054a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161052c575b50505050508152505083828151811061056557610565611bef565b6020026020010181905250808061057b90611c1b565b91505061038b565b505090565b6000610593336111ab565b905081816001015410156105c15760405163112fed8b60e31b81523360048201526024015b60405180910390fd5b818160010160008282546105d59190611c34565b92505081905550818160020160008282546105f09190611c34565b9091555050604051339083156108fc029084906000818181858888f19350505050158015610622573d6000803e3d6000fd5b505050565b6000610632336111ab565b9050818160010154101561067f5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016105b8565b600080600061068d86611200565b925092509250848460010160008282546106a79190611c34565b909155505060405163147500e360e01b81523360048201526001600160a01b0388811660248301526060919084169063147500e390604401602060405180830381865afa1580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190611c47565b15610771576040513360248201526001600160a01b038916604482015260640160408051601f198184030181529190526020810180516001600160e01b0316633f54d97360e01b179052905061086e565b816000036107f857338886600301876005016040516024016107969493929190611ce6565b60408051601f19818403018152919052602080820180516001600160e01b03166312f0ebfd60e21b17905260068701805460018101825560009182529190200180546001600160a01b038b166001600160a01b0319909116179055905061086e565b33888660050160405160240161081093929190611d48565b60408051601f19818403018152919052602080820180516001600160e01b031663e50688f960e01b17905260078701805460018101825560009182529190200180546001600160a01b038b166001600160a01b031990911617905590505b6000846001600160a01b031687836040516108899190611d74565b60006040518083038185875af1925050503d80600081146108c6576040519150601f19603f3d011682016040523d82523d6000602084013e6108cb565b606091505b505090508061091c5760405162461bcd60e51b815260206004820152601d60248201527f43616c6c20746f206368696c6420636f6e7472616374206661696c656400000060448201526064016105b8565b505050505050505050565b600061093282611200565b509150506000610941336111ab565b90506000805b8551811015610aa5576000846001600160a01b0316634e3c4f223389858151811061097457610974611bef565b60200260200101516040518363ffffffff1660e01b81526004016109ae9291906001600160a01b0392831681529116602082015260400190565b6060604051808303816000875af11580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190611d90565b505090508083610a019190611dbe565b9250846001600160a01b0316636c79158d33898581518110610a2557610a25611bef565b60200260200101516040518363ffffffff1660e01b8152600401610a5f9291906001600160a01b0392831681529116602082015260400190565b600060405180830381600087803b158015610a7957600080fd5b505af1158015610a8d573d6000803e3d6000fd5b50505050508080610a9d90611c1b565b915050610947565b5080826001016000828254610aba9190611dbe565b90915550505050505050565b610ace611301565b610ad8600061135b565b565b6000806000610ae8336113ab565b9050610af3816113df565b15610b135760405163cde58aa160e01b81523360048201526024016105b8565b610b2081338734886113f2565b5034946000945092505050565b6000610b38826113ab565b9050610b43816113df565b610b6b57604051637d2d536b60e01b81526001600160a01b03831660048201526024016105b8565b6000610b76336111ab565b905060005b6006820154811015610c33576007546006830180546001600160a01b0390921691639721672591339185908110610bb457610bb4611bef565b60009182526020909120015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b158015610c0857600080fd5b505af1158015610c1c573d6000803e3d6000fd5b505050508080610c2b90611c1b565b915050610b7b565b5060005b6007820154811015610cef576006546007830180546001600160a01b0390921691639721672591339185908110610c7057610c70611bef565b60009182526020909120015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b158015610cc457600080fd5b505af1158015610cd8573d6000803e3d6000fd5b505050508080610ce790611c1b565b915050610c37565b50610cfb60038361145c565b50600082815260056020526040812080546001600160a01b03191681556001810182905560028101829055600381018290556004810182905590610d4360058301600061165a565b610d51600683016000611694565b610d5f600783016000611694565b5050505050565b6000610d71336113ab565b9050610d7c816113df565b610d9b57604051637d2d536b60e01b81523360048201526024016105b8565b6000610da6336111ab565b905034816001016000828254610dbc9190611dbe565b9250508190555034816002016000828254610dd79190611dbe565b90915550505050565b600054600160a01b900460ff1615610e455760405162461bcd60e51b815260206004820152602260248201527f496e697469616c697a61626c653a20616c726561647920696e697469616c697a604482015261195960f21b60648201526084016105b8565b6000805460ff60a01b1916600160a01b179055610e618161135b565b50600180546001600160a01b039384166001600160a01b031991821681179092556002805493909416928116831790935560068054841690921790915560078054909216179055565b6000610eb5836111ab565b90508181600101548260020154610ecc9190611c34565b1015610f115760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016105b8565b81816002016000828254610f259190611c34565b9091555050505050565b610f37611301565b6001600160a01b038116610f9c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b8565b610fa58161135b565b50565b610fb061160e565b610fb9826111ab565b6040805160e08101825282546001600160a01b031681526001830154602082015260028084015482840152825180840193849052919392606085019291600385019182845b815481526020019060010190808311610ffe575050505050815260200160058201805461102a90611bb5565b80601f016020809104026020016040519081016040528092919081815260200182805461105690611bb5565b80156110a35780601f10611078576101008083540402835291602001916110a3565b820191906000526020600020905b81548152906001019060200180831161108657829003601f168201915b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561110557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116110e7575b505050505081526020016007820180548060200260200160405190810160405280929190818152602001828054801561116757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611149575b5050505050815250509050919050565b60006111836003611468565b905090565b600080611196600384611472565b60009081526005602052604090209392505050565b6000806111b7836113ab565b60008181526005602052604090209091506111d1826113df565b6111f957604051637d2d536b60e01b81526001600160a01b03851660048201526024016105b8565b9392505050565b600080600080846040516020016112179190611d74565b6040516020818303038152906040528051906020012090507f2a52b6261f3850b89541ab4444869004fe552e50532808641800076f8e9ec46581036112755750506001546007546001600160a01b03918216935016905060006112fa565b7f37f0d1f2303720bab95e3c739b15188d8c19fade32eb63f80ef3d06b64daa9d281036112bb5750506002546006546001600160a01b03918216935016905060016112fa565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642073657276696365207479706560601b60448201526064016105b8565b9193909250565b6000546001600160a01b03163314610ad85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b038316602082015260009101604051602081830303815290604052805190602001209050919050565b60006113ec60038361147e565b92915050565b600085815260056020526040902060018101839055600280820184905581546001600160a01b0319166001600160a01b03871617825561143890600383019086906116b2565b50600581016114478382611e1f565b50611453600387611496565b50505050505050565b60006111f983836114a2565b60006113ec825490565b60006111f98383611595565b600081815260018301602052604081205415156111f9565b60006111f983836115bf565b6000818152600183016020526040812054801561158b5760006114c6600183611c34565b85549091506000906114da90600190611c34565b905081811461153f5760008660000182815481106114fa576114fa611bef565b906000526020600020015490508087600001848154811061151d5761151d611bef565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061155057611550611edf565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506113ec565b60009150506113ec565b60008260000182815481106115ac576115ac611bef565b9060005260206000200154905092915050565b6000818152600183016020526040812054611606575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556113ec565b5060006113ec565b6040518060e0016040528060006001600160a01b03168152602001600081526020016000815260200161163f6116f0565b81526020016060815260200160608152602001606081525090565b50805461166690611bb5565b6000825580601f10611676575050565b601f016020900490600052602060002090810190610fa5919061170e565b5080546000825590600052602060002090810190610fa5919061170e565b82600281019282156116e0579160200282015b828111156116e05782358255916020019190600101906116c5565b506116ec92915061170e565b5090565b60405180604001604052806002906020820280368337509192915050565b5b808211156116ec576000815560010161170f565b60005b8381101561173e578181015183820152602001611726565b50506000910152565b6000815180845261175f816020860160208601611723565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156117ac5781516001600160a01b031687529582019590820190600101611787565b509495945050505050565b600061010060018060a01b038351168452602080840151818601526040840151604086015260608401516060860160005b6002811015611805578251825291830191908301906001016117e8565b5050505060808301518160a086015261182082860182611747565b91505060a083015184820360c086015261183a8282611773565b91505060c083015184820360e08601526118548282611773565b95945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156118b257603f198886030184526118a08583516117b7565b94509285019290850190600101611884565b5092979650505050505050565b6000602082840312156118d157600080fd5b5035919050565b80356001600160a01b03811681146118ef57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611933576119336118f4565b604052919050565b600082601f83011261194c57600080fd5b813567ffffffffffffffff811115611966576119666118f4565b611979601f8201601f191660200161190a565b81815284602083860101111561198e57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156119c057600080fd5b6119c9846118d8565b9250602084013567ffffffffffffffff8111156119e557600080fd5b6119f18682870161193b565b925050604084013590509250925092565b60008060408385031215611a1557600080fd5b823567ffffffffffffffff80821115611a2d57600080fd5b818501915085601f830112611a4157600080fd5b8135602082821115611a5557611a556118f4565b8160051b611a6482820161190a565b928352848101820192828101908a851115611a7e57600080fd5b958301955b84871015611aa357611a94876118d8565b82529583019590830190611a83565b9750505086013592505080821115611aba57600080fd5b50611ac78582860161193b565b9150509250929050565b60008060608385031215611ae457600080fd5b6040830184811115611af557600080fd5b8392503567ffffffffffffffff811115611b0e57600080fd5b611ac78582860161193b565b600060208284031215611b2c57600080fd5b6111f9826118d8565b600080600060608486031215611b4a57600080fd5b611b53846118d8565b9250611b61602085016118d8565b9150611b6f604085016118d8565b90509250925092565b60008060408385031215611b8b57600080fd5b611b94836118d8565b946020939093013593505050565b6020815260006111f960208301846117b7565b600181811c90821680611bc957607f821691505b602082108103611be957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611c2d57611c2d611c05565b5060010190565b818103818111156113ec576113ec611c05565b600060208284031215611c5957600080fd5b815180151581146111f957600080fd5b60008154611c7681611bb5565b808552602060018381168015611c935760018114611cad57611cdb565b60ff1985168884015283151560051b880183019550611cdb565b866000528260002060005b85811015611cd35781548a8201860152908301908401611cb8565b890184019650505b505050505092915050565b6001600160a01b0385811682528416602080830191909152600090604083019085835b6002811015611d2657815484529282019260019182019101611d09565b5050505060a06080830152611d3e60a0830184611c69565b9695505050505050565b6001600160a01b0384811682528316602082015260606040820181905260009061185490830184611c69565b60008251611d86818460208701611723565b9190910192915050565b600080600060608486031215611da557600080fd5b8351925060208401519150604084015190509250925092565b808201808211156113ec576113ec611c05565b601f82111561062257600081815260208120601f850160051c81016020861015611df85750805b601f850160051c820191505b81811015611e1757828155600101611e04565b505050505050565b815167ffffffffffffffff811115611e3957611e396118f4565b611e4d81611e478454611bb5565b84611dd1565b602080601f831160018114611e825760008415611e6a5750858301515b600019600386901b1c1916600185901b178555611e17565b600085815260208120601f198616915b82811015611eb157888601518255948401946001909101908401611e92565b5085821015611ecf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea26469706673582212201a7f641d97c8404cd707023bf4f00d4861ce29f59e4a1d66882dd0757647678d64736f6c63430008140033";
const isSuperArgs = (xs) => xs.length > 1;
class LedgerManager__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.LedgerManager__factory = LedgerManager__factory;
//# sourceMappingURL=LedgerManager__factory.js.map