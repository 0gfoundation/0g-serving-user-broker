"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LedgerManager__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'InsufficientBalance',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'string',
                name: 'serviceType',
                type: 'string',
            },
        ],
        name: 'InvalidServiceType',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'LedgerExists',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'LedgerNotExists',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'requested',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'maximum',
                type: 'uint256',
            },
        ],
        name: 'TooManyProviders',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [],
        name: 'MAX_PROVIDERS_PER_BATCH',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256[2]',
                name: 'inferenceSigner',
                type: 'uint256[2]',
            },
            {
                internalType: 'string',
                name: 'additionalInfo',
                type: 'string',
            },
        ],
        name: 'addLedger',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'deleteLedger',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'depositFund',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'fineTuningAddress',
        outputs: [
            {
                internalType: 'address payable',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'offset',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'limit',
                type: 'uint256',
            },
        ],
        name: 'getAllLedgers',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'user',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'availableBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'totalBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256[2]',
                        name: 'inferenceSigner',
                        type: 'uint256[2]',
                    },
                    {
                        internalType: 'string',
                        name: 'additionalInfo',
                        type: 'string',
                    },
                    {
                        internalType: 'address[]',
                        name: 'inferenceProviders',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address[]',
                        name: 'fineTuningProviders',
                        type: 'address[]',
                    },
                ],
                internalType: 'struct Ledger[]',
                name: 'ledgers',
                type: 'tuple[]',
            },
            {
                internalType: 'uint256',
                name: 'total',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
        ],
        name: 'getLedger',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'user',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'availableBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'totalBalance',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256[2]',
                        name: 'inferenceSigner',
                        type: 'uint256[2]',
                    },
                    {
                        internalType: 'string',
                        name: 'additionalInfo',
                        type: 'string',
                    },
                    {
                        internalType: 'address[]',
                        name: 'inferenceProviders',
                        type: 'address[]',
                    },
                    {
                        internalType: 'address[]',
                        name: 'fineTuningProviders',
                        type: 'address[]',
                    },
                ],
                internalType: 'struct Ledger',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'inferenceAddress',
        outputs: [
            {
                internalType: 'address payable',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_inferenceAddress',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_fineTuningAddress',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'initialized',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'refund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address[]',
                name: 'providers',
                type: 'address[]',
            },
            {
                internalType: 'string',
                name: 'serviceType',
                type: 'string',
            },
        ],
        name: 'retrieveFund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'spendFund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'provider',
                type: 'address',
            },
            {
                internalType: 'string',
                name: 'serviceTypeStr',
                type: 'string',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'transferFund',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        stateMutability: 'payable',
        type: 'receive',
    },
];
const _bytecode = '0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612725806100826000396000f3fe6080604052600436106101025760003560e01c80638d0d8cb611610095578063c0c53b8b11610064578063c0c53b8b146102a7578063dd8a4118146102c7578063e5d9fdab146102e7578063f2fde38b14610307578063f7cd6af91461032757600080fd5b80638d0d8cb6146102305780638da5cb5b146102385780639449fe1714610256578063987086f01461027957600080fd5b8063382e1112116100d1578063382e1112146101a6578063410b3815146101de578063715018a6146101f357806372adc0d91461020857600080fd5b8063158ef93e1461010e578063278ecde1146101445780632ba43b821461016657806331404a191461018657600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5060005461012f90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b34801561015057600080fd5b5061016461015f366004611e8a565b610354565b005b34801561017257600080fd5b50610164610181366004611f76565b610463565b34801561019257600080fd5b506101646101a1366004611fcd565b610829565b3480156101b257600080fd5b506003546101c6906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b3480156101ea57600080fd5b50610164610a77565b3480156101ff57600080fd5b50610164610ef0565b61021b61021636600461209c565b610f02565b6040805192835260208301919091520161013b565b610164610fc0565b34801561024457600080fd5b506000546001600160a01b03166101c6565b34801561026257600080fd5b5061026b601481565b60405190815260200161013b565b34801561028557600080fd5b506102996102943660046120e5565b611070565b60405161013b929190612241565b3480156102b357600080fd5b506101646102c23660046122aa565b611354565b3480156102d357600080fd5b506101646102e23660046122ed565b61141e565b3480156102f357600080fd5b506002546101c6906001600160a01b031681565b34801561031357600080fd5b50610164610322366004612317565b61152e565b34801561033357600080fd5b50610347610342366004612317565b6115a7565b60405161013b9190612332565b33600061036082611776565b60008181526007602052604090205490915060ff161561039b5760405162461bcd60e51b815260040161039290612345565b60405180910390fd5b6000818152600760205260408120805460ff191660011790556103bd336117aa565b905083816001015410156103e65760405163112fed8b60e31b8152336004820152602401610392565b838160010160008282546103fa9190612392565b92505081905550838160020160008282546104159190612392565b9091555050604051339085156108fc029086906000818181858888f19350505050158015610447573d6000803e3d6000fd5b50506000908152600760205260409020805460ff191690555050565b61046b6117fd565b33600061047782611776565b60008181526007602052604090205490915060ff16156104a95760405162461bcd60e51b815260040161039290612345565b6000818152600760205260408120805460ff191660011790556104cb336117aa565b905060008060006104db88611856565b60405163147500e360e01b81523360048201526001600160a01b038d81166024830152939650919450925088916060919085169063147500e390604401602060405180830381865afa158015610535573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055991906123a5565b1561064557604051631320b9eb60e11b81523360048201526001600160a01b038c811660248301526000919086169063264173d690604401602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d291906123ce565b905060006105e08b83611933565b90506105ec8185612392565b6040513360248201526001600160a01b038f1660448201526064810183905290945060840160408051601f198184030181529190526020810180516001600160e01b031663745e87f760e01b17905292506106e9915050565b821561069957338b8760030188600501604051602401610668949392919061249e565b60408051601f198184030181529190526020810180516001600160e01b03166312f0ebfd60e21b17905290506106de565b338b876005016040516024016106b193929190612500565b60408051601f198184030181529190526020810180516001600160e01b031663e50688f960e01b17905290505b6106e9338c8561194d565b81866001015410156107345760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610392565b818660010160008282546107489190612392565b925050819055506000856001600160a01b0316838360405161076a919061252c565b60006040518083038185875af1925050503d80600081146107a7576040519150601f19603f3d011682016040523d82523d6000602084013e6107ac565b606091505b50509050806107fd5760405162461bcd60e51b815260206004820152601d60248201527f43616c6c20746f206368696c6420636f6e7472616374206661696c65640000006044820152606401610392565b505050600094855250506007602052505060409020805460ff191690555061082460018055565b505050565b6108316117fd565b33600061083d82611776565b60008181526007602052604090205490915060ff161561086f5760405162461bcd60e51b815260040161039290612345565b6000818152600760205260409020805460ff191660011790558351601410156108b857835160405163414f261960e11b8152600481019190915260146024820152604401610392565b60006108c384611856565b5091505060006108d2336117aa565b90506000805b8751811015610a36576000846001600160a01b0316634e3c4f22338b858151811061090557610905612548565b60200260200101516040518363ffffffff1660e01b815260040161093f9291906001600160a01b0392831681529116602082015260400190565b6060604051808303816000875af115801561095e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610982919061255e565b505090508083610992919061258c565b9250846001600160a01b0316636c79158d338b85815181106109b6576109b6612548565b60200260200101516040518363ffffffff1660e01b81526004016109f09291906001600160a01b0392831681529116602082015260400190565b600060405180830381600087803b158015610a0a57600080fd5b505af1158015610a1e573d6000803e3d6000fd5b50505050508080610a2e9061259f565b9150506108d8565b5080826001016000828254610a4b919061258c565b90915550505060009283525050600760205260409020805460ff1916905550610a7360018055565b5050565b610a7f6117fd565b336000610a8b82611776565b60008181526007602052604090205490915060ff1615610abd5760405162461bcd60e51b815260040161039290612345565b6000818152600760205260408120805460ff19166001179055610adf33611776565b336000908152600860205260408120919250610afa82611a26565b67ffffffffffffffff811115610b1257610b12611ebf565b604051908082528060200260200182016040528015610b3b578160200160208202803683370190505b50905060005b610b4a83611a26565b811015610b9757610b5b8382611a30565b828281518110610b6d57610b6d612548565b6001600160a01b039092166020928302919091019091015280610b8f8161259f565b915050610b41565b5060005b8151811015610c9357600b5482516001600160a01b03909116906397216725903390859085908110610bcf57610bcf612548565b60200260200101516040518363ffffffff1660e01b8152600401610c099291906001600160a01b0392831681529116602082015260400190565b600060405180830381600087803b158015610c2357600080fd5b505af1925050508015610c34575060015b610c6a57610c64828281518110610c4d57610c4d612548565b602002602001015184611a3c90919063ffffffff16565b50610c81565b610c7f828281518110610c4d57610c4d612548565b505b80610c8b8161259f565b915050610b9b565b5033600090815260096020526040812090610cad82611a26565b67ffffffffffffffff811115610cc557610cc5611ebf565b604051908082528060200260200182016040528015610cee578160200160208202803683370190505b50905060005b610cfd83611a26565b811015610d4a57610d0e8382611a30565b828281518110610d2057610d20612548565b6001600160a01b039092166020928302919091019091015280610d428161259f565b915050610cf4565b5060005b8151811015610e2f57600a5482516001600160a01b03909116906397216725903390859085908110610d8257610d82612548565b60200260200101516040518363ffffffff1660e01b8152600401610dbc9291906001600160a01b0392831681529116602082015260400190565b600060405180830381600087803b158015610dd657600080fd5b505af1925050508015610de7575060015b610e0657610e00828281518110610c4d57610c4d612548565b50610e1d565b610e1b828281518110610c4d57610c4d612548565b505b80610e278161259f565b915050610d4e565b506000610e3b336117aa565b9050610e4b600682016000611d75565b610e59600782016000611d75565b610e64600487611a51565b50600086815260066020526040812080546001600160a01b03191681556001810182905560028101829055600381018290556004810182905590610eac600583016000611d93565b610eba600683016000611d75565b610ec8600783016000611d75565b50505060009586525050600760205250506040909120805460ff19169055505060018055565b565b610ef8611a5d565b610eee6000611ab7565b600080336000610f1182611776565b60008181526007602052604090205490915060ff1615610f435760405162461bcd60e51b815260040161039290612345565b6000818152600760205260408120805460ff19166001179055610f6533611776565b9050610f7081611b07565b15610f905760405163cde58aa160e01b8152336004820152602401610392565b610f9d813389348a611b14565b506000908152600760205260408120805460ff1916905534969095509350505050565b336000610fcc82611776565b60008181526007602052604090205490915060ff1615610ffe5760405162461bcd60e51b815260040161039290612345565b6000818152600760205260408120805460ff19166001179055611020336117aa565b905034816001016000828254611036919061258c565b9250508190555034816002016000828254611051919061258c565b9091555050506000908152600760205260409020805460ff1916905550565b6060600061107c611b7e565b90508084106110be5760408051600080825260208201909252906110b6565b6110a3611dcd565b81526020019060019003908161109b5790505b50915061134d565b600083156110de576110d96110d3858761258c565b83611933565b6110e0565b815b905060006110ee8683612392565b90508067ffffffffffffffff81111561110957611109611ebf565b60405190808252806020026020018201604052801561114257816020015b61112f611dcd565b8152602001906001900390816111275790505b50935060005b818110156113495761116261115d828961258c565b611b8f565b6040805160e08101825282546001600160a01b031681526001830154602082015260028084015482840152825180840193849052919392606085019291600385019182845b8154815260200190600101908083116111a757505050505081526020016005820180546111d3906123e7565b80601f01602080910402602001604051908101604052809291908181526020018280546111ff906123e7565b801561124c5780601f106112215761010080835404028352916020019161124c565b820191906000526020600020905b81548152906001019060200180831161122f57829003601f168201915b50505050508152602001600682018054806020026020016040519081016040528092919081815260200182805480156112ae57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611290575b505050505081526020016007820180548060200260200160405190810160405280929190818152602001828054801561131057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116112f2575b50505050508152505085828151811061132b5761132b612548565b602002602001018190525080806113419061259f565b915050611148565b5050505b9250929050565b600054600160a01b900460ff16156113b95760405162461bcd60e51b815260206004820152602260248201527f496e697469616c697a61626c653a20616c726561647920696e697469616c697a604482015261195960f21b6064820152608401610392565b6000805460ff60a01b1916600160a01b1790556113d581611ab7565b50600280546001600160a01b039384166001600160a01b0319918216811790925560038054939094169281168317909355600a80548416909217909155600b8054909216179055565b6003546001600160a01b031633148061144157506002546001600160a01b031633145b6114a95760405162461bcd60e51b815260206004820152603360248201527f43616c6c6572206973206e6f74207468652066696e652074756e696e67206f72604482015272081a5b99995c995b98d94818dbdb9d1c9858dd606a1b6064820152608401610392565b60006114b4836117aa565b905081816001015482600201546114cb9190612392565b10156115105760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610392565b818160020160008282546115249190612392565b9091555050505050565b611536611a5d565b6001600160a01b03811661159b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610392565b6115a481611ab7565b50565b6115af611dcd565b6115b8826117aa565b6040805160e08101825282546001600160a01b031681526001830154602082015260028084015482840152825180840193849052919392606085019291600385019182845b8154815260200190600101908083116115fd5750505050508152602001600582018054611629906123e7565b80601f0160208091040260200160405190810160405280929190818152602001828054611655906123e7565b80156116a25780601f10611677576101008083540402835291602001916116a2565b820191906000526020600020905b81548152906001019060200180831161168557829003601f168201915b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561170457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116e6575b505050505081526020016007820180548060200260200160405190810160405280929190818152602001828054801561176657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611748575b5050505050815250509050919050565b604080516001600160a01b038316602082015260009101604051602081830303815290604052805190602001209050919050565b6000806117b683611776565b90506117c181611b07565b6117e957604051637d2d536b60e01b81526001600160a01b0384166004820152602401610392565b600090815260066020526040902092915050565b60026001540361184f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610392565b6002600155565b6000806000808460405160200161186d919061252c565b6040516020818303038152906040528051906020012090507f2a52b6261f3850b89541ab4444869004fe552e50532808641800076f8e9ec46581036118cb575050600254600b546001600160a01b039182169350169050600161192c565b7f37f0d1f2303720bab95e3c739b15188d8c19fade32eb63f80ef3d06b64daa9d28103611911575050600354600a546001600160a01b039182169350169050600061192c565b846040516333a9e39160e11b815260040161039291906125b8565b9193909250565b60008183106119425781611944565b825b90505b92915050565b600081611971576001600160a01b038416600090815260096020526040902061198a565b6001600160a01b03841660009081526008602052604090205b90506119968184611bb2565b611a20576119a48184611bd4565b5060006119b0856117aa565b905082156119ed57600681018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b038616179055611a1e565b600781018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0386161790555b505b50505050565b6000611947825490565b60006119448383611be9565b6000611944836001600160a01b038416611c13565b60006119448383611c13565b6000546001600160a01b03163314610eee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610392565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611947600483611d06565b600085815260066020526040902060018101839055600280820184905581546001600160a01b0319166001600160a01b038716178255611b5a9060038301908690611e19565b5060058101611b698382612619565b50611b75600487611d1e565b50505050505050565b6000611b8a6004611a26565b905090565b600080611b9d600484611a30565b60009081526006602052604090209392505050565b6001600160a01b03811660009081526001830160205260408120541515611944565b6000611944836001600160a01b038416611d26565b6000826000018281548110611c0057611c00612548565b9060005260206000200154905092915050565b60008181526001830160205260408120548015611cfc576000611c37600183612392565b8554909150600090611c4b90600190612392565b9050818114611cb0576000866000018281548110611c6b57611c6b612548565b9060005260206000200154905080876000018481548110611c8e57611c8e612548565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611cc157611cc16126d9565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611947565b6000915050611947565b60008181526001830160205260408120541515611944565b600061194483835b6000818152600183016020526040812054611d6d57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611947565b506000611947565b50805460008255906000526020600020908101906115a49190611e57565b508054611d9f906123e7565b6000825580601f10611daf575050565b601f0160209004906000526020600020908101906115a49190611e57565b6040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001611dfe611e6c565b81526020016060815260200160608152602001606081525090565b8260028101928215611e47579160200282015b82811115611e47578235825591602001919060010190611e2c565b50611e53929150611e57565b5090565b5b80821115611e535760008155600101611e58565b60405180604001604052806002906020820280368337509192915050565b600060208284031215611e9c57600080fd5b5035919050565b80356001600160a01b0381168114611eba57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611efe57611efe611ebf565b604052919050565b600082601f830112611f1757600080fd5b813567ffffffffffffffff811115611f3157611f31611ebf565b611f44601f8201601f1916602001611ed5565b818152846020838601011115611f5957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611f8b57600080fd5b611f9484611ea3565b9250602084013567ffffffffffffffff811115611fb057600080fd5b611fbc86828701611f06565b925050604084013590509250925092565b60008060408385031215611fe057600080fd5b823567ffffffffffffffff80821115611ff857600080fd5b818501915085601f83011261200c57600080fd5b813560208282111561202057612020611ebf565b8160051b61202f828201611ed5565b928352848101820192828101908a85111561204957600080fd5b958301955b8487101561206e5761205f87611ea3565b8252958301959083019061204e565b975050508601359250508082111561208557600080fd5b5061209285828601611f06565b9150509250929050565b600080606083850312156120af57600080fd5b60408301848111156120c057600080fd5b8392503567ffffffffffffffff8111156120d957600080fd5b61209285828601611f06565b600080604083850312156120f857600080fd5b50508035926020909101359150565b60005b8381101561212257818101518382015260200161210a565b50506000910152565b60008151808452612143816020860160208601612107565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156121905781516001600160a01b03168752958201959082019060010161216b565b509495945050505050565b600061010060018060a01b038351168452602080840151818601526040840151604086015260608401516060860160005b60028110156121e9578251825291830191908301906001016121cc565b5050505060808301518160a08601526122048286018261212b565b91505060a083015184820360c086015261221e8282612157565b91505060c083015184820360e08601526122388282612157565b95945050505050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561229857605f1988870301855261228686835161219b565b9550938201939082019060010161226a565b50509490940194909452949350505050565b6000806000606084860312156122bf57600080fd5b6122c884611ea3565b92506122d660208501611ea3565b91506122e460408501611ea3565b90509250925092565b6000806040838503121561230057600080fd5b61230983611ea3565b946020939093013593505050565b60006020828403121561232957600080fd5b61194482611ea3565b602081526000611944602083018461219b565b6020808252601b908201527f4c6564676572206c6f636b656420666f72206f7065726174696f6e0000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156119475761194761237c565b6000602082840312156123b757600080fd5b815180151581146123c757600080fd5b9392505050565b6000602082840312156123e057600080fd5b5051919050565b600181811c908216806123fb57607f821691505b60208210810361241b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000815461242e816123e7565b80855260206001838116801561244b576001811461246557612493565b60ff1985168884015283151560051b880183019550612493565b866000528260002060005b8581101561248b5781548a8201860152908301908401612470565b890184019650505b505050505092915050565b6001600160a01b0385811682528416602080830191909152600090604083019085835b60028110156124de578154845292820192600191820191016124c1565b5050505060a060808301526124f660a0830184612421565b9695505050505050565b6001600160a01b0384811682528316602082015260606040820181905260009061223890830184612421565b6000825161253e818460208701612107565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b60008060006060848603121561257357600080fd5b8351925060208401519150604084015190509250925092565b808201808211156119475761194761237c565b6000600182016125b1576125b161237c565b5060010190565b602081526000611944602083018461212b565b601f82111561082457600081815260208120601f850160051c810160208610156125f25750805b601f850160051c820191505b81811015612611578281556001016125fe565b505050505050565b815167ffffffffffffffff81111561263357612633611ebf565b6126478161264184546123e7565b846125cb565b602080601f83116001811461267c57600084156126645750858301515b600019600386901b1c1916600185901b178555612611565b600085815260208120601f198616915b828110156126ab5788860151825594840194600190910190840161268c565b50858210156126c95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200f591d494f7fc487c4945fdd325585efbbf27733392d5c09ffd2e9716c7aebf764736f6c63430008140033';
const isSuperArgs = (xs) => xs.length > 1;
class LedgerManager__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.LedgerManager__factory = LedgerManager__factory;
//# sourceMappingURL=LedgerManager__factory.js.map