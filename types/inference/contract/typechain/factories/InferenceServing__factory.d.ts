import { ContractFactory, ContractTransactionResponse } from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../common.js';
import type { InferenceServing, InferenceServingInterface } from '../InferenceServing.js';
type InferenceServingConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class InferenceServing__factory extends ContractFactory {
    constructor(...args: InferenceServingConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<InferenceServing & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): InferenceServing__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b506200001d3362000023565b62000073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6133cc80620000836000396000f3fe60806040526004361061014b5760003560e01c8063715018a6116100b6578063972167251161006f57806397216725146103cd578063bbee42d9146103ed578063d1d2005614610402578063f2fde38b14610422578063fbfa4e1114610442578063fd5908471461046257600080fd5b8063715018a614610327578063745e87f71461033c578063746e78d71461034f578063754d1d541461036f57806378c004361461038f5780638da5cb5b146103af57600080fd5b8063264173d611610108578063264173d61461023f578063371c22c51461025f57806340f5dbbd146102975780634bc3aff4146102b95780634e3c4f22146102cc5780636c79158d1461030757600080fd5b806308e93d0a146101505780630d6680871461017b578063147500e31461019f578063158ef93e146101cf57806315a52302146101f057806321fe0f301461021d575b600080fd5b34801561015c57600080fd5b5061016561048f565b6040516101729190612adf565b60405180910390f35b34801561018757600080fd5b5061019160015481565b604051908152602001610172565b3480156101ab57600080fd5b506101bf6101ba366004612b5d565b6104a0565b6040519015158152602001610172565b3480156101db57600080fd5b506000546101bf90600160a01b900460ff1681565b3480156101fc57600080fd5b5061021061020b366004612b90565b6104b7565b6040516101729190612c40565b34801561022957600080fd5b50610232610758565b6040516101729190612c53565b34801561024b57600080fd5b5061019161025a366004612b5d565b610764565b34801561026b57600080fd5b5060025461027f906001600160a01b031681565b6040516001600160a01b039091168152602001610172565b3480156102a357600080fd5b506102b76102b2366004612d94565b610772565b005b6102b76102c7366004612e65565b610884565b3480156102d857600080fd5b506102ec6102e7366004612b5d565b610919565b60408051938452602084019290925290820152606001610172565b34801561031357600080fd5b506102b7610322366004612b5d565b6109f0565b34801561033357600080fd5b506102b7610a2a565b6102b761034a366004612ed9565b610a3e565b34801561035b57600080fd5b506102b761036a366004612b90565b610ac8565b34801561037b57600080fd5b506102b761038a366004612f15565b610afc565b34801561039b57600080fd5b506102b76103aa366004612f62565b610bcc565b3480156103bb57600080fd5b506000546001600160a01b031661027f565b3480156103d957600080fd5b506102b76103e8366004612b5d565b6111e4565b3480156103f957600080fd5b506102b761121a565b34801561040e57600080fd5b5060035461027f906001600160a01b031681565b34801561042e57600080fd5b506102b761043d366004612b90565b611252565b34801561044e57600080fd5b506102b761045d366004612fa4565b6112cb565b34801561046e57600080fd5b5061048261047d366004612b5d565b6112d8565b6040516101729190612fbd565b606061049b6006611485565b905090565b60006104ae600684846116c6565b90505b92915050565b6104bf6127f2565b6104ca6009836116e3565b60408051610100810190915281546001600160a01b031681526001820180549192916020840191906104fb90612fd0565b80601f016020809104026020016040519081016040528092919081815260200182805461052790612fd0565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b5050505050815260200160028201805461058d90612fd0565b80601f01602080910402602001604051908101604052809291908181526020018280546105b990612fd0565b80156106065780601f106105db57610100808354040283529160200191610606565b820191906000526020600020905b8154815290600101906020018083116105e957829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815260200160068201805461063d90612fd0565b80601f016020809104026020016040519081016040528092919081815260200182805461066990612fd0565b80156106b65780601f1061068b576101008083540402835291602001916106b6565b820191906000526020600020905b81548152906001019060200180831161069957829003601f168201915b505050505081526020016007820180546106cf90612fd0565b80601f01602080910402602001604051908101604052809291908181526020018280546106fb90612fd0565b80156107485780601f1061071d57610100808354040283529160200191610748565b820191906000526020600020905b81548152906001019060200180831161072b57829003601f168201915b5050505050815250509050919050565b606061049b60096116ef565b60006104ae60068484611a1d565b610826338a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506009979695949392508a9150899050611a38565b336001600160a01b03167f30ecc203691b2d18e17ee75d47caf34a3fb9f86e855f7e0414d3cec26d0c424b8a8a8a8686428d8d8d8d6040516108719a99989796959493929190613033565b60405180910390a2505050505050505050565b6003546001600160a01b031633146108b75760405162461bcd60e51b81526004016108ae906130a6565b60405180910390fd5b6000806108c960068787873488611b12565b91509150846001600160a01b0316866001600160a01b03166000805160206133778339815191528484604051610909929190918252602082015260400190565b60405180910390a3505050505050565b600354600090819081906001600160a01b0316331461094a5760405162461bcd60e51b81526004016108ae906130a6565b60015461095d9060069087908790611b7d565b91945092509050600083900361097657600092506109e9565b604051339084156108fc029085906000818181858888f193505050501580156109a3573d6000803e3d6000fd5b50836001600160a01b0316856001600160a01b031660008051602061337783398151915284846040516109e0929190918252602082015260400190565b60405180910390a35b9250925092565b6003546001600160a01b03163314610a1a5760405162461bcd60e51b81526004016108ae906130a6565b610a2660068383611cb8565b5050565b610a32611d79565b610a3c6000611dd3565b565b6003546001600160a01b03163314610a685760405162461bcd60e51b81526004016108ae906130a6565b600080610a79600686868634611e23565b91509150836001600160a01b0316856001600160a01b03166000805160206133778339815191528484604051610ab9929190918252602082015260400190565b60405180910390a35050505050565b610ad0611d79565b600280546001600160a01b039092166001600160a01b0319928316811790915560048054909216179055565b600054600160a01b900460ff1615610b615760405162461bcd60e51b815260206004820152602260248201527f496e697469616c697a61626c653a20616c726561647920696e697469616c697a604482015261195960f21b60648201526084016108ae565b6000805460ff60a01b1916600160a01b179055610b7d81611dd3565b50600192909255600280546001600160a01b039283166001600160a01b031991821681179092556003805493909416928116831790935560058054841690921790915560048054909216179055565b6004546000906001600160a01b031663ad12259a610bea84806130e7565b610bf760208701876130e7565b87604001356040518663ffffffff1660e01b8152600401610c1c959493929190613163565b602060405180830381865afa158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d919061319d565b905080610cad5760405163885e287960e01b815260206004820152601f60248201527f5a4b20736574746c656d656e742076616c69646174696f6e206661696c65640060448201526064016108ae565b6000610cbc60208401846130e7565b808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250939450339250839150505b610d0160608701876130e7565b905081101561116e576000610d1960608801886130e7565b83818110610d2957610d296131bf565b90506020020135905060008185610d4091906131eb565b9050600080878781518110610d5757610d576131bf565b60200260200101519050600088886002610d7191906131eb565b81518110610d8157610d816131bf565b60200260200101519050600089896003610d9b91906131eb565b81518110610dab57610dab6131bf565b602002602001015190506000610dcd84336006611fd29092919063ffffffff16565b90508a610ddb8b60056131eb565b81518110610deb57610deb6131bf565b602002602001015181600501600060028110610e0957610e096131bf565b0154141580610e5257508a610e1f8b60066131eb565b81518110610e2f57610e2f6131bf565b602002602001015181600501600160028110610e4d57610e4d6131bf565b015414155b15610ea05760405163885e287960e01b815260206004820152601760248201527f7369676e6572206b657920697320696e636f727265637400000000000000000060448201526064016108ae565b8281600201541115610ef55760405163885e287960e01b815260206004820152601a60248201527f696e697469616c206e6f6e636520697320696e636f727265637400000000000060448201526064016108ae565b895b868110156110f75760008c8281518110610f1357610f136131bf565b6020026020010151905060008d836001610f2d91906131eb565b81518110610f3d57610f3d6131bf565b602002602001015190508d836003610f5591906131eb565b81518110610f6557610f656131bf565b6020026020010151945060008e846004610f7f91906131eb565b81518110610f8f57610f8f6131bf565b6020026020010151905060008a856009610fa991906131eb565b10610fb5576000610fda565b8f610fc18660096131eb565b81518110610fd157610fd16131bf565b60200260200101515b90508015801590610feb5750808710155b1561102c5760405163885e287960e01b815260206004820152601060248201526f1b9bdb98d9481bdd995c9b185c1c195960821b60448201526064016108ae565b888414158061103b57508d8314155b156110d357888403611082576040518060400160405280601d81526020017f70726f7669646572206164647265737320697320696e636f72726563740000008152506110b9565b6040518060400160405280601981526020017f75736572206164647265737320697320696e636f7272656374000000000000008152505b60405163885e287960e01b81526004016108ae91906131fe565b6110dd828b6131eb565b9950505050506007816110f091906131eb565b9050610ef7565b5084816003015410156111445760405163885e287960e01b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064016108ae565b61114e8186611fdf565b60020155509195508392506111669150829050613211565b915050610cf4565b50825182146111dd5760405163885e287960e01b815260206004820152603460248201527f6172726179207365676d656e7453697a652073756d206d69736d617463686573604482015273040e0eac4d8d2c640d2dce0eae840d8cadccee8d60631b60648201526084016108ae565b5050505050565b6003546001600160a01b0316331461120e5760405162461bcd60e51b81526004016108ae906130a6565b610a266006838361224c565b6112256009336122ec565b60405133907f29d546abb6e94f4f04d5bdccb6682316f597d43776078f47e273f000e77b2a9190600090a2565b61125a611d79565b6001600160a01b0381166112bf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108ae565b6112c881611dd3565b50565b6112d3611d79565b600155565b6112e0612840565b6112ec60068484611fd2565b604080516101008101825282546001600160a01b039081168252600184015416602082015260028084015482840152600384015460608301526004840154608083015282518084019384905291939260a085019291600585019182845b815481526020019060010190808311611349575050505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156113e3576000848152602090819020604080516080810182526004860290920180548352600180820154848601526002820154928401929092526003015460ff1615156060830152908352909201910161138a565b5050505081526020016008820180546113fb90612fd0565b80601f016020809104026020016040519081016040528092919081815260200182805461142790612fd0565b80156114745780601f1061144957610100808354040283529160200191611474565b820191906000526020600020905b81548152906001019060200180831161145757829003601f168201915b505050505081525050905092915050565b606060006114928361233b565b90508067ffffffffffffffff8111156114ad576114ad612ca8565b6040519080825280602002602001820160405280156114e657816020015b6114d3612840565b8152602001906001900390816114cb5790505b50915060005b818110156116bf576114fe8482612346565b604080516101008101825282546001600160a01b039081168252600184015416602082015260028084015482840152600384015460608301526004840154608083015282518084019384905291939260a085019291600585019182845b81548152602001906001019080831161155b575050505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156115f5576000848152602090819020604080516080810182526004860290920180548352600180820154848601526002820154928401929092526003015460ff1615156060830152908352909201910161159c565b50505050815260200160088201805461160d90612fd0565b80601f016020809104026020016040519081016040528092919081815260200182805461163990612fd0565b80156116865780601f1061165b57610100808354040283529160200191611686565b820191906000526020600020905b81548152906001019060200180831161166957829003601f168201915b5050505050815250508382815181106116a1576116a16131bf565b602002602001018190525080806116b790613211565b9150506114ec565b5050919050565b60006116db846116d6858561236c565b6123a4565b949350505050565b60006104ae83836123b0565b606060006116fc8361233b565b90508067ffffffffffffffff81111561171757611717612ca8565b60405190808252806020026020018201604052801561175057816020015b61173d6127f2565b8152602001906001900390816117355790505b50915060005b818110156116bf576117688482612346565b60408051610100810190915281546001600160a01b0316815260018201805491929160208401919061179990612fd0565b80601f01602080910402602001604051908101604052809291908181526020018280546117c590612fd0565b80156118125780601f106117e757610100808354040283529160200191611812565b820191906000526020600020905b8154815290600101906020018083116117f557829003601f168201915b5050505050815260200160028201805461182b90612fd0565b80601f016020809104026020016040519081016040528092919081815260200182805461185790612fd0565b80156118a45780601f10611879576101008083540402835291602001916118a4565b820191906000526020600020905b81548152906001019060200180831161188757829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820180546118db90612fd0565b80601f016020809104026020016040519081016040528092919081815260200182805461190790612fd0565b80156119545780601f1061192957610100808354040283529160200191611954565b820191906000526020600020905b81548152906001019060200180831161193757829003601f168201915b5050505050815260200160078201805461196d90612fd0565b80601f016020809104026020016040519081016040528092919081815260200182805461199990612fd0565b80156119e65780601f106119bb576101008083540402835291602001916119e6565b820191906000526020600020905b8154815290600101906020018083116119c957829003601f168201915b505050505081525050838281518110611a0157611a016131bf565b602002602001018190525080611a1690613211565b9050611756565b600080611a2b858585612401565b6004015495945050505050565b6000611a4388612464565b9050611a4f89826123a4565b611aa757611aa089826040518061010001604052808c6001600160a01b031681526020018b81526020018a815260200187815260200186815260200142815260200189815260200188815250612498565b5050611b08565b6000611ab38a8a6123b0565b905060018101611ac38982613270565b50600381018490556004810183905560028101611ae08882613270565b5042600582015560068101611af58782613270565b5060078101611b048682613270565b5050505b5050505050505050565b6000806000611b21888861236c565b9050611b2d89826123a4565b15611b5e57604051632cf0675960e21b81526001600160a01b03808a166004830152881660248201526044016108ae565b611b6d89828a8a8a8a8a612548565b5092976000975095505050505050565b600080600080611b8e888888612401565b90506000935060005b6007820154811015611c9e576000826007018281548110611bba57611bba6131bf565b60009182526020909120600490910201600381015490915060ff1615611be05750611c8c565b868160020154611bf091906131eb565b421015611bfd5750611c8c565b8060010154836003016000828254611c159190613330565b90915550506001810154600484018054600090611c33908490613330565b90915550506001810154611c4790876131eb565b9550826007018281548110611c5e57611c5e6131bf565b600091825260208220600490910201818155600181018290556002810191909155600301805460ff19169055505b80611c9681613211565b915050611b97565b508060030154925080600401549150509450945094915050565b6000611cc5848484612401565b9050600081600401548260030154611cdd9190613330565b905080600003611cee575050505050565b6040805160808101825260078401805480835260208084018681524295850195865260006060860181815260018086018755958252928120955160049485029096019586559051938501939093559351600284015592516003909201805460ff1916921515929092179091559083018054839290611d6d9084906131eb565b90915550505050505050565b6000546001600160a01b03163314610a3c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108ae565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000611e32878761236c565b9050611e3e88826123a4565b611e6e5760405163023280eb60e21b81526001600160a01b038089166004830152871660248201526044016108ae565b6000611e7b898989612401565b905060005b6007820154811015611f9e576000826007018281548110611ea357611ea36131bf565b60009182526020909120600490910201600381015490915060ff1615611ec95750611f8c565b8060010154836004016000828254611ee19190613330565b909155505060018101548811611f3857826007018281548110611f0657611f066131bf565b600091825260208220600490910201818155600181018290556002810191909155600301805460ff1916905550611f9e565b6001810154611f479089613330565b9750826007018281548110611f5e57611f5e6131bf565b600091825260208220600490910201818155600181018290556002810191909155600301805460ff19169055505b80611f9681613211565b915050611e80565b5084816003016000828254611fb391906131eb565b9091555050600381015460049091015490999098509650505050505050565b60006116db848484612401565b81600401548260030154611ff39190613330565b811115612158576000826004015483600301546120109190613330565b61201a9083613330565b9050808360040154101561207f5760405163885e287960e01b815260206004820152602560248201527f696e73756666696369656e742062616c616e636520696e2070656e64696e675260448201526419599d5b9960da1b60648201526084016108ae565b808360040160008282546120939190613330565b909155505060078301546000906120ac90600190613330565b90505b600081126121555760008460070182815481106120ce576120ce6131bf565b60009182526020909120600490910201600381015490915060ff16156120f45750612143565b8281600101541161211557600181015461210e9084613330565b9250612133565b828160010160008282546121299190613330565b9091555060009350505b826000036121415750612155565b505b8061214d81613343565b9150506120af565b50505b8082600301600082825461216c9190613330565b90915550506005548254604051631bb1482360e31b81526001600160a01b0391821660048201526024810184905291169063dd8a411890604401600060405180830381600087803b1580156121c057600080fd5b505af11580156121d4573d6000803e3d6000fd5b50508354600385015460048601546040805192835260208301919091523394506001600160a01b039092169250600080516020613377833981519152910160405180910390a3604051339082156108fc029083906000818181858888f19350505050158015612247573d6000803e3d6000fd5b505050565b6000612258838361236c565b905061226484826123a4565b61226e5750505050565b61227884826125c3565b50600081815260028086016020526040822080546001600160a01b03199081168255600182018054909116905590810182905560038101829055600481018290556005810182905560068101829055906122d660078301600061289d565b6122e46008830160006128be565b505050505050565b60006122f782612464565b905061230383826123a4565b61232b576040516304c76d3f60e11b81526001600160a01b03831660048201526024016108ae565b61233583826125cf565b50505050565b60006104b18261264c565b6000806123538484612656565b6000908152600285016020526040902091505092915050565b604080516001600160a01b03938416602080830191909152929093168382015280518084038201815260609093019052815191012090565b60006104ae8383612662565b6000806123bc83612464565b600081815260028601602052604090209091506123d985836123a4565b6116db576040516304c76d3f60e11b81526001600160a01b03851660048201526024016108ae565b60008061240e848461236c565b6000818152600287016020526040902090915061242b86836123a4565b61245b5760405163023280eb60e21b81526001600160a01b038087166004830152851660248201526044016108ae565b95945050505050565b604080516001600160a01b038316602082015260009101604051602081830303815290604052805190602001209050919050565b600082815260028401602090815260408220835181546001600160a01b0319166001600160a01b039091161781559083015183919060018201906124dc9082613270565b50604082015160028201906124f19082613270565b50606082015160038201556080820151600482015560a0820151600582015560c082015160068201906125249082613270565b5060e082015160078201906125399082613270565b506116db91508590508461267a565b6000868152600280890160205260409091206003810184905580546001600160a01b038089166001600160a01b0319928316178355600183018054918916919092161790559061259e90600583019086906128f8565b50600881016125ad8382613270565b506125b8888861267a565b505050505050505050565b60006104ae8383612686565b6000818152600283016020526040812080546001600160a01b0319168155816125fb60018301826128be565b6126096002830160006128be565b60038201600090556004820160009055600582016000905560068201600061263191906128be565b61263f6007830160006128be565b506104ae905083836125c3565b60006104b1825490565b60006104ae8383612779565b600081815260018301602052604081205415156104ae565b60006104ae83836127a3565b6000818152600183016020526040812054801561276f5760006126aa600183613330565b85549091506000906126be90600190613330565b90508181146127235760008660000182815481106126de576126de6131bf565b9060005260206000200154905080876000018481548110612701576127016131bf565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061273457612734613360565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104b1565b60009150506104b1565b6000826000018281548110612790576127906131bf565b9060005260206000200154905092915050565b60008181526001830160205260408120546127ea575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104b1565b5060006104b1565b60405180610100016040528060006001600160a01b03168152602001606081526020016060815260200160008152602001600081526020016000815260200160608152602001606081525090565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001612889612936565b815260200160608152602001606081525090565b50805460008255600402906000526020600020908101906112c89190612954565b5080546128ca90612fd0565b6000825580601f106128da575050565b601f0160209004906000526020600020908101906112c89190612982565b8260028101928215612926579160200282015b8281111561292657823582559160200191906001019061290b565b50612932929150612982565b5090565b60405180604001604052806002906020820280368337509192915050565b5b8082111561293257600080825560018201819055600282015560038101805460ff19169055600401612955565b5b808211156129325760008155600101612983565b8060005b600281101561233557815184526020938401939091019060010161299b565b600081518084526020808501945080840160005b83811015612a0c57815180518852838101518489015260408082015190890152606090810151151590880152608090960195908201906001016129ce565b509495945050505050565b6000815180845260005b81811015612a3d57602081850181015186830182015201612a21565b506000602082860101526020601f19601f83011685010191505092915050565b600061012060018060a01b038084511685528060208501511660208601525060408301516040850152606083015160608501526080830151608085015260a0830151612aac60a0860182612997565b5060c08301518160e0860152612ac4828601826129ba565b91505060e083015184820361010086015261245b8282612a17565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612b3457603f19888603018452612b22858351612a5d565b94509285019290850190600101612b06565b5092979650505050505050565b80356001600160a01b0381168114612b5857600080fd5b919050565b60008060408385031215612b7057600080fd5b612b7983612b41565b9150612b8760208401612b41565b90509250929050565b600060208284031215612ba257600080fd5b6104ae82612b41565b80516001600160a01b0316825260006101006020830151816020860152612bd482860182612a17565b91505060408301518482036040860152612bee8282612a17565b915050606083015160608501526080830151608085015260a083015160a085015260c083015184820360c0860152612c268282612a17565b91505060e083015184820360e086015261245b8282612a17565b6020815260006104ae6020830184612bab565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612b3457603f19888603018452612c96858351612bab565b94509285019290850190600101612c7a565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612ccf57600080fd5b813567ffffffffffffffff80821115612cea57612cea612ca8565b604051601f8301601f19908116603f01168101908282118183101715612d1257612d12612ca8565b81604052838152866020858801011115612d2b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008083601f840112612d5d57600080fd5b50813567ffffffffffffffff811115612d7557600080fd5b602083019150836020828501011115612d8d57600080fd5b9250929050565b600080600080600080600080600060c08a8c031215612db257600080fd5b893567ffffffffffffffff80821115612dca57600080fd5b612dd68d838e01612cbe565b9a5060208c0135915080821115612dec57600080fd5b612df88d838e01612d4b565b909a50985060408c0135915080821115612e1157600080fd5b612e1d8d838e01612d4b565b909850965060608c0135915080821115612e3657600080fd5b50612e438c828d01612d4b565b9a9d999c50979a96999598959660808101359660a09091013595509350505050565b60008060008060a08587031215612e7b57600080fd5b612e8485612b41565b9350612e9260208601612b41565b92506080850186811115612ea557600080fd5b6040860192503567ffffffffffffffff811115612ec157600080fd5b612ecd87828801612cbe565b91505092959194509250565b600080600060608486031215612eee57600080fd5b612ef784612b41565b9250612f0560208501612b41565b9150604084013590509250925092565b60008060008060808587031215612f2b57600080fd5b84359350612f3b60208601612b41565b9250612f4960408601612b41565b9150612f5760608601612b41565b905092959194509250565b600060208284031215612f7457600080fd5b813567ffffffffffffffff811115612f8b57600080fd5b820160808185031215612f9d57600080fd5b9392505050565b600060208284031215612fb657600080fd5b5035919050565b6020815260006104ae6020830184612a5d565b600181811c90821680612fe457607f821691505b60208210810361300457634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60e08152600061304660e083018d612a17565b8281036020840152613059818c8e61300a565b905089604084015288606084015287608084015282810360a084015261308081878961300a565b905082810360c084015261309581858761300a565b9d9c50505050505050505050505050565b60208082526021908201527f43616c6c6572206973206e6f7420746865206c656467657220636f6e747261636040820152601d60fa1b606082015260800190565b6000808335601e198436030181126130fe57600080fd5b83018035915067ffffffffffffffff82111561311957600080fd5b6020019150600581901b3603821315612d8d57600080fd5b81835260006001600160fb1b0383111561314a57600080fd5b8260051b80836020870137939093016020019392505050565b606081526000613177606083018789613131565b828103602084015261318a818688613131565b9150508260408301529695505050505050565b6000602082840312156131af57600080fd5b81518015158114612f9d57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156104b1576104b16131d5565b6020815260006104ae6020830184612a17565b600060018201613223576132236131d5565b5060010190565b601f82111561224757600081815260208120601f850160051c810160208610156132515750805b601f850160051c820191505b818110156122e45782815560010161325d565b815167ffffffffffffffff81111561328a5761328a612ca8565b61329e816132988454612fd0565b8461322a565b602080601f8311600181146132d357600084156132bb5750858301515b600019600386901b1c1916600185901b1785556122e4565b600085815260208120601f198616915b82811015613302578886015182559484019460019091019084016132e3565b50858210156133205787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156104b1576104b16131d5565b6000600160ff1b8201613358576133586131d5565b506000190190565b634e487b7160e01b600052603160045260246000fdfe526824944047da5b81071fb6349412005c5da81380b336103fbe5dd34556c776a2646970667358221220cc9ea8f736f576b0d18f7b980b923566ccb3db13dff381dacb94691f5ff60dcd64736f6c63430008140033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "AccountExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "AccountNotExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }];
        readonly name: "InvalidProofInputs";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "ServiceNotExist";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "pendingRefund";
            readonly type: "uint256";
        }];
        readonly name: "BalanceUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "RefundRequested";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "service";
            readonly type: "address";
        }];
        readonly name: "ServiceRemoved";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "service";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "serviceType";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "url";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "inputPrice";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "outputPrice";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "updatedAt";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "model";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "verifiability";
            readonly type: "string";
        }];
        readonly name: "ServiceUpdated";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "accountExists";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[2]";
            readonly name: "signer";
            readonly type: "uint256[2]";
        }, {
            readonly internalType: "string";
            readonly name: "additionalInfo";
            readonly type: "string";
        }];
        readonly name: "addAccount";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "serviceType";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "url";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "model";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "verifiability";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "inputPrice";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "outputPrice";
            readonly type: "uint256";
        }];
        readonly name: "addOrUpdateService";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "batchVerifierAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "deleteAccount";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "cancelRetrievingAmount";
            readonly type: "uint256";
        }];
        readonly name: "depositFund";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "getAccount";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "pendingRefund";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "signer";
                readonly type: "uint256[2]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "createdAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "processed";
                    readonly type: "bool";
                }];
                readonly internalType: "struct Refund[]";
                readonly name: "refunds";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }];
            readonly internalType: "struct Account";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAllAccounts";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "pendingRefund";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "signer";
                readonly type: "uint256[2]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "createdAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "processed";
                    readonly type: "bool";
                }];
                readonly internalType: "struct Refund[]";
                readonly name: "refunds";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }];
            readonly internalType: "struct Account[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAllServices";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "string";
                readonly name: "serviceType";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "url";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "outputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "updatedAt";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "model";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "verifiability";
                readonly type: "string";
            }];
            readonly internalType: "struct Service[]";
            readonly name: "services";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "getPendingRefund";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "getService";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "string";
                readonly name: "serviceType";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "url";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "outputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "updatedAt";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "model";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "verifiability";
                readonly type: "string";
            }];
            readonly internalType: "struct Service";
            readonly name: "service";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_locktime";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_batchVerifierAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_ledgerAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "ledgerAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lockTime";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "processRefund";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "totalAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "pendingRefund";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "removeService";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "requestRefundAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256[]";
                readonly name: "inProof";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "proofInputs";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256";
                readonly name: "numChunks";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "segmentSize";
                readonly type: "uint256[]";
            }];
            readonly internalType: "struct VerifierInput";
            readonly name: "verifierInput";
            readonly type: "tuple";
        }];
        readonly name: "settleFees";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_batchVerifierAddress";
            readonly type: "address";
        }];
        readonly name: "updateBatchVerifierAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_locktime";
            readonly type: "uint256";
        }];
        readonly name: "updateLockTime";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): InferenceServingInterface;
    static connect(address: string, runner?: ContractRunner | null): InferenceServing;
}
export {};
//# sourceMappingURL=InferenceServing__factory.d.ts.map