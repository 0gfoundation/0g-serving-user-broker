import { ContractFactory, ContractTransactionResponse } from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../common.js';
import type { InferenceServing, InferenceServingInterface } from '../InferenceServing.js';
type InferenceServingConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class InferenceServing__factory extends ContractFactory {
    constructor(...args: InferenceServingConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<InferenceServing & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): InferenceServing__factory;
    static readonly bytecode = "";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "AccountExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "AccountNotExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }];
        readonly name: "InvalidProofInputs";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }];
        readonly name: "InvalidTEESignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "ServiceNotExist";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "pendingRefund";
            readonly type: "uint256";
        }];
        readonly name: "BalanceUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "RefundRequested";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "service";
            readonly type: "address";
        }];
        readonly name: "ServiceRemoved";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "service";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "serviceType";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "url";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "inputPrice";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "outputPrice";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "updatedAt";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "model";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "verifiability";
            readonly type: "string";
        }];
        readonly name: "ServiceUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "successCount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "failedCount";
            readonly type: "uint256";
        }];
        readonly name: "TEESettlementCompleted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }];
        readonly name: "TEESettlementFailed";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "accountExists";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[2]";
            readonly name: "providerPubKey";
            readonly type: "uint256[2]";
        }];
        readonly name: "acknowledgeProviderSigner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "teeSignerAddress";
            readonly type: "address";
        }];
        readonly name: "acknowledgeTEESigner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[2]";
            readonly name: "signer";
            readonly type: "uint256[2]";
        }, {
            readonly internalType: "string";
            readonly name: "additionalInfo";
            readonly type: "string";
        }];
        readonly name: "addAccount";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "serviceType";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "url";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "model";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "verifiability";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "outputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }];
            readonly internalType: "struct ServiceParams";
            readonly name: "params";
            readonly type: "tuple";
        }];
        readonly name: "addOrUpdateService";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "batchVerifierAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "deleteAccount";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "cancelRetrievingAmount";
            readonly type: "uint256";
        }];
        readonly name: "depositFund";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "getAccount";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "pendingRefund";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "signer";
                readonly type: "uint256[2]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "createdAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "processed";
                    readonly type: "bool";
                }];
                readonly internalType: "struct Refund[]";
                readonly name: "refunds";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "providerPubKey";
                readonly type: "uint256[2]";
            }, {
                readonly internalType: "address";
                readonly name: "teeSignerAddress";
                readonly type: "address";
            }];
            readonly internalType: "struct Account";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "offset";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "limit";
            readonly type: "uint256";
        }];
        readonly name: "getAccountsByProvider";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "pendingRefund";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "signer";
                readonly type: "uint256[2]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "createdAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "processed";
                    readonly type: "bool";
                }];
                readonly internalType: "struct Refund[]";
                readonly name: "refunds";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "providerPubKey";
                readonly type: "uint256[2]";
            }, {
                readonly internalType: "address";
                readonly name: "teeSignerAddress";
                readonly type: "address";
            }];
            readonly internalType: "struct Account[]";
            readonly name: "accounts";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "uint256";
            readonly name: "total";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "offset";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "limit";
            readonly type: "uint256";
        }];
        readonly name: "getAccountsByUser";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "pendingRefund";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "signer";
                readonly type: "uint256[2]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "createdAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "processed";
                    readonly type: "bool";
                }];
                readonly internalType: "struct Refund[]";
                readonly name: "refunds";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "providerPubKey";
                readonly type: "uint256[2]";
            }, {
                readonly internalType: "address";
                readonly name: "teeSignerAddress";
                readonly type: "address";
            }];
            readonly internalType: "struct Account[]";
            readonly name: "accounts";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "uint256";
            readonly name: "total";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAllAccounts";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "pendingRefund";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "signer";
                readonly type: "uint256[2]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "createdAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "processed";
                    readonly type: "bool";
                }];
                readonly internalType: "struct Refund[]";
                readonly name: "refunds";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "providerPubKey";
                readonly type: "uint256[2]";
            }, {
                readonly internalType: "address";
                readonly name: "teeSignerAddress";
                readonly type: "address";
            }];
            readonly internalType: "struct Account[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAllServices";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "string";
                readonly name: "serviceType";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "url";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "outputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "updatedAt";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "model";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "verifiability";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }];
            readonly internalType: "struct Service[]";
            readonly name: "services";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "users";
            readonly type: "address[]";
        }];
        readonly name: "getBatchAccountsByUsers";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "pendingRefund";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "signer";
                readonly type: "uint256[2]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "createdAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "processed";
                    readonly type: "bool";
                }];
                readonly internalType: "struct Refund[]";
                readonly name: "refunds";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "providerPubKey";
                readonly type: "uint256[2]";
            }, {
                readonly internalType: "address";
                readonly name: "teeSignerAddress";
                readonly type: "address";
            }];
            readonly internalType: "struct Account[]";
            readonly name: "accounts";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "getPendingRefund";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "getService";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "string";
                readonly name: "serviceType";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "url";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "outputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "updatedAt";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "model";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "verifiability";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }];
            readonly internalType: "struct Service";
            readonly name: "service";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_locktime";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_batchVerifierAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_ledgerAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "ledgerAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lockTime";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "processRefund";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "totalAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "pendingRefund";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "removeService";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "requestRefundAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256[]";
                readonly name: "inProof";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "proofInputs";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256";
                readonly name: "numChunks";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "segmentSize";
                readonly type: "uint256[]";
            }];
            readonly internalType: "struct VerifierInput";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly name: "settleFees";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "totalFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "requestsHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct TEESettlementData[]";
            readonly name: "settlements";
            readonly type: "tuple[]";
        }];
        readonly name: "settleFeesWithTEE";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "failedUsers";
            readonly type: "address[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_batchVerifierAddress";
            readonly type: "address";
        }];
        readonly name: "updateBatchVerifierAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_locktime";
            readonly type: "uint256";
        }];
        readonly name: "updateLockTime";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): InferenceServingInterface;
    static connect(address: string, runner?: ContractRunner | null): InferenceServing;
}
export {};
//# sourceMappingURL=InferenceServing__factory.d.ts.map