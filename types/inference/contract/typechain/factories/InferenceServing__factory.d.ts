import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common.js";
import type { InferenceServing, InferenceServingInterface } from "../InferenceServing.js";
type InferenceServingConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class InferenceServing__factory extends ContractFactory {
    constructor(...args: InferenceServingConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<InferenceServing & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): InferenceServing__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613217806200007f6000396000f3fe6080604052600436106101405760003560e01c80636c79158d116100b6578063972167251161006f57806397216725146103a2578063bbee42d9146103c2578063d1d20056146103d7578063f2fde38b146103f7578063fbfa4e1114610417578063fd5908471461043757600080fd5b80636c79158d146102ef578063715018a61461030f578063746e78d714610324578063754d1d541461034457806378c00436146103645780638da5cb5b1461038457600080fd5b806321fe0f301161010857806321fe0f3014610212578063371c22c5146102345780633f54d9731461026c57806340f5dbbd146102815780634bc3aff4146102a15780634e3c4f22146102b457600080fd5b806308e93d0a146101455780630d66808714610170578063147500e314610194578063158ef93e146101c457806315a52302146101e5575b600080fd5b34801561015157600080fd5b5061015a610464565b6040516101679190612966565b60405180910390f35b34801561017c57600080fd5b5061018660015481565b604051908152602001610167565b3480156101a057600080fd5b506101b46101af3660046129e4565b610475565b6040519015158152602001610167565b3480156101d057600080fd5b506000546101b490600160a01b900460ff1681565b3480156101f157600080fd5b50610205610200366004612a17565b61048c565b6040516101679190612ac7565b34801561021e57600080fd5b5061022761072d565b6040516101679190612ada565b34801561024057600080fd5b50600254610254906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b61027f61027a3660046129e4565b610739565b005b34801561028d57600080fd5b5061027f61029c366004612c1b565b6107ca565b61027f6102af366004612cec565b6108dc565b3480156102c057600080fd5b506102d46102cf3660046129e4565b610968565b60408051938452602084019290925290820152606001610167565b3480156102fb57600080fd5b5061027f61030a3660046129e4565b610a3f565b34801561031b57600080fd5b5061027f610a79565b34801561033057600080fd5b5061027f61033f366004612a17565b610a8d565b34801561035057600080fd5b5061027f61035f366004612d60565b610ac1565b34801561037057600080fd5b5061027f61037f366004612dad565b610b91565b34801561039057600080fd5b506000546001600160a01b0316610254565b3480156103ae57600080fd5b5061027f6103bd3660046129e4565b6111a9565b3480156103ce57600080fd5b5061027f6111df565b3480156103e357600080fd5b50600354610254906001600160a01b031681565b34801561040357600080fd5b5061027f610412366004612a17565b611217565b34801561042357600080fd5b5061027f610432366004612def565b611290565b34801561044357600080fd5b506104576104523660046129e4565b61129d565b6040516101679190612e08565b6060610470600661144a565b905090565b60006104836006848461168b565b90505b92915050565b610494612679565b61049f6009836116a8565b60408051610100810190915281546001600160a01b031681526001820180549192916020840191906104d090612e1b565b80601f01602080910402602001604051908101604052809291908181526020018280546104fc90612e1b565b80156105495780601f1061051e57610100808354040283529160200191610549565b820191906000526020600020905b81548152906001019060200180831161052c57829003601f168201915b5050505050815260200160028201805461056290612e1b565b80601f016020809104026020016040519081016040528092919081815260200182805461058e90612e1b565b80156105db5780601f106105b0576101008083540402835291602001916105db565b820191906000526020600020905b8154815290600101906020018083116105be57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815260200160068201805461061290612e1b565b80601f016020809104026020016040519081016040528092919081815260200182805461063e90612e1b565b801561068b5780601f106106605761010080835404028352916020019161068b565b820191906000526020600020905b81548152906001019060200180831161066e57829003601f168201915b505050505081526020016007820180546106a490612e1b565b80601f01602080910402602001604051908101604052809291908181526020018280546106d090612e1b565b801561071d5780601f106106f25761010080835404028352916020019161071d565b820191906000526020600020905b81548152906001019060200180831161070057829003601f168201915b5050505050815250509050919050565b606061047060096116b4565b6003546001600160a01b0316331461076c5760405162461bcd60e51b815260040161076390612e55565b60405180910390fd5b60008061077c60068585346119e2565b91509150826001600160a01b0316846001600160a01b03166000805160206131c283398151915284846040516107bc929190918252602082015260400190565b60405180910390a350505050565b61087e338a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506009979695949392508a9150899050611a6e565b336001600160a01b03167f30ecc203691b2d18e17ee75d47caf34a3fb9f86e855f7e0414d3cec26d0c424b8a8a8a8686428d8d8d8d6040516108c99a99989796959493929190612ebf565b60405180910390a2505050505050505050565b6003546001600160a01b031633146109065760405162461bcd60e51b815260040161076390612e55565b60008061091860068787873488611b48565b91509150846001600160a01b0316866001600160a01b03166000805160206131c28339815191528484604051610958929190918252602082015260400190565b60405180910390a3505050505050565b600354600090819081906001600160a01b031633146109995760405162461bcd60e51b815260040161076390612e55565b6001546109ac9060069087908790611bb3565b9194509250905060008390036109c55760009250610a38565b604051339084156108fc029085906000818181858888f193505050501580156109f2573d6000803e3d6000fd5b50836001600160a01b0316856001600160a01b03166000805160206131c28339815191528484604051610a2f929190918252602082015260400190565b60405180910390a35b9250925092565b6003546001600160a01b03163314610a695760405162461bcd60e51b815260040161076390612e55565b610a7560068383611cee565b5050565b610a81611daf565b610a8b6000611e09565b565b610a95611daf565b600280546001600160a01b039092166001600160a01b0319928316811790915560048054909216179055565b600054600160a01b900460ff1615610b265760405162461bcd60e51b815260206004820152602260248201527f496e697469616c697a61626c653a20616c726561647920696e697469616c697a604482015261195960f21b6064820152608401610763565b6000805460ff60a01b1916600160a01b179055610b4281611e09565b50600192909255600280546001600160a01b039283166001600160a01b031991821681179092556003805493909416928116831790935560058054841690921790915560048054909216179055565b6004546000906001600160a01b031663ad12259a610baf8480612f32565b610bbc6020870187612f32565b87604001356040518663ffffffff1660e01b8152600401610be1959493929190612fae565b602060405180830381865afa158015610bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c229190612fe8565b905080610c725760405163885e287960e01b815260206004820152601f60248201527f5a4b20736574746c656d656e742076616c69646174696f6e206661696c6564006044820152606401610763565b6000610c816020840184612f32565b808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250939450339250839150505b610cc66060870187612f32565b9050811015611133576000610cde6060880188612f32565b83818110610cee57610cee61300a565b90506020020135905060008185610d059190613036565b9050600080878781518110610d1c57610d1c61300a565b60200260200101519050600088886002610d369190613036565b81518110610d4657610d4661300a565b60200260200101519050600089896003610d609190613036565b81518110610d7057610d7061300a565b602002602001015190506000610d9284336006611e599092919063ffffffff16565b90508a610da08b6005613036565b81518110610db057610db061300a565b602002602001015181600501600060028110610dce57610dce61300a565b0154141580610e1757508a610de48b6006613036565b81518110610df457610df461300a565b602002602001015181600501600160028110610e1257610e1261300a565b015414155b15610e655760405163885e287960e01b815260206004820152601760248201527f7369676e6572206b657920697320696e636f72726563740000000000000000006044820152606401610763565b8281600201541115610eba5760405163885e287960e01b815260206004820152601a60248201527f696e697469616c206e6f6e636520697320696e636f72726563740000000000006044820152606401610763565b895b868110156110bc5760008c8281518110610ed857610ed861300a565b6020026020010151905060008d836001610ef29190613036565b81518110610f0257610f0261300a565b602002602001015190508d836003610f1a9190613036565b81518110610f2a57610f2a61300a565b6020026020010151945060008e846004610f449190613036565b81518110610f5457610f5461300a565b6020026020010151905060008a856009610f6e9190613036565b10610f7a576000610f9f565b8f610f86866009613036565b81518110610f9657610f9661300a565b60200260200101515b90508015801590610fb05750808710155b15610ff15760405163885e287960e01b815260206004820152601060248201526f1b9bdb98d9481bdd995c9b185c1c195960821b6044820152606401610763565b888414158061100057508d8314155b1561109857888403611047576040518060400160405280601d81526020017f70726f7669646572206164647265737320697320696e636f727265637400000081525061107e565b6040518060400160405280601981526020017f75736572206164647265737320697320696e636f7272656374000000000000008152505b60405163885e287960e01b81526004016107639190613049565b6110a2828b613036565b9950505050506007816110b59190613036565b9050610ebc565b5084816003015410156111095760405163885e287960e01b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610763565b6111138186611e66565b600201555091955083925061112b915082905061305c565b915050610cb9565b50825182146111a25760405163885e287960e01b815260206004820152603460248201527f6172726179207365676d656e7453697a652073756d206d69736d617463686573604482015273040e0eac4d8d2c640d2dce0eae840d8cadccee8d60631b6064820152608401610763565b5050505050565b6003546001600160a01b031633146111d35760405162461bcd60e51b815260040161076390612e55565b610a75600683836120d3565b6111ea600933612173565b60405133907f29d546abb6e94f4f04d5bdccb6682316f597d43776078f47e273f000e77b2a9190600090a2565b61121f611daf565b6001600160a01b0381166112845760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610763565b61128d81611e09565b50565b611298611daf565b600155565b6112a56126c7565b6112b160068484611e59565b604080516101008101825282546001600160a01b039081168252600184015416602082015260028084015482840152600384015460608301526004840154608083015282518084019384905291939260a085019291600585019182845b81548152602001906001019080831161130e575050505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156113a8576000848152602090819020604080516080810182526004860290920180548352600180820154848601526002820154928401929092526003015460ff1615156060830152908352909201910161134f565b5050505081526020016008820180546113c090612e1b565b80601f01602080910402602001604051908101604052809291908181526020018280546113ec90612e1b565b80156114395780601f1061140e57610100808354040283529160200191611439565b820191906000526020600020905b81548152906001019060200180831161141c57829003601f168201915b505050505081525050905092915050565b60606000611457836121c2565b90508067ffffffffffffffff81111561147257611472612b2f565b6040519080825280602002602001820160405280156114ab57816020015b6114986126c7565b8152602001906001900390816114905790505b50915060005b81811015611684576114c384826121cd565b604080516101008101825282546001600160a01b039081168252600184015416602082015260028084015482840152600384015460608301526004840154608083015282518084019384905291939260a085019291600585019182845b815481526020019060010190808311611520575050505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156115ba576000848152602090819020604080516080810182526004860290920180548352600180820154848601526002820154928401929092526003015460ff16151560608301529083529092019101611561565b5050505081526020016008820180546115d290612e1b565b80601f01602080910402602001604051908101604052809291908181526020018280546115fe90612e1b565b801561164b5780601f106116205761010080835404028352916020019161164b565b820191906000526020600020905b81548152906001019060200180831161162e57829003601f168201915b5050505050815250508382815181106116665761166661300a565b6020026020010181905250808061167c9061305c565b9150506114b1565b5050919050565b60006116a08461169b85856121f3565b61222b565b949350505050565b60006104838383612237565b606060006116c1836121c2565b90508067ffffffffffffffff8111156116dc576116dc612b2f565b60405190808252806020026020018201604052801561171557816020015b611702612679565b8152602001906001900390816116fa5790505b50915060005b818110156116845761172d84826121cd565b60408051610100810190915281546001600160a01b0316815260018201805491929160208401919061175e90612e1b565b80601f016020809104026020016040519081016040528092919081815260200182805461178a90612e1b565b80156117d75780601f106117ac576101008083540402835291602001916117d7565b820191906000526020600020905b8154815290600101906020018083116117ba57829003601f168201915b505050505081526020016002820180546117f090612e1b565b80601f016020809104026020016040519081016040528092919081815260200182805461181c90612e1b565b80156118695780601f1061183e57610100808354040283529160200191611869565b820191906000526020600020905b81548152906001019060200180831161184c57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820180546118a090612e1b565b80601f01602080910402602001604051908101604052809291908181526020018280546118cc90612e1b565b80156119195780601f106118ee57610100808354040283529160200191611919565b820191906000526020600020905b8154815290600101906020018083116118fc57829003601f168201915b5050505050815260200160078201805461193290612e1b565b80601f016020809104026020016040519081016040528092919081815260200182805461195e90612e1b565b80156119ab5780601f10611980576101008083540402835291602001916119ab565b820191906000526020600020905b81548152906001019060200180831161198e57829003601f168201915b5050505050815250508382815181106119c6576119c661300a565b6020026020010181905250806119db9061305c565b905061171b565b60008060006119f186866121f3565b90506119fd878261222b565b611a2d5760405163023280eb60e21b81526001600160a01b03808816600483015286166024820152604401610763565b6000611a3a888888612288565b905084816003016000828254611a509190613036565b90915550506003810154600490910154909890975095505050505050565b6000611a79886122eb565b9050611a85898261222b565b611add57611ad689826040518061010001604052808c6001600160a01b031681526020018b81526020018a81526020018781526020018681526020014281526020018981526020018881525061231f565b5050611b3e565b6000611ae98a8a612237565b905060018101611af989826130bb565b50600381018490556004810183905560028101611b1688826130bb565b5042600582015560068101611b2b87826130bb565b5060078101611b3a86826130bb565b5050505b5050505050505050565b6000806000611b5788886121f3565b9050611b63898261222b565b15611b9457604051632cf0675960e21b81526001600160a01b03808a16600483015288166024820152604401610763565b611ba389828a8a8a8a8a6123cf565b5092976000975095505050505050565b600080600080611bc4888888612288565b90506000935060005b6007820154811015611cd4576000826007018281548110611bf057611bf061300a565b60009182526020909120600490910201600381015490915060ff1615611c165750611cc2565b868160020154611c269190613036565b421015611c335750611cc2565b8060010154836003016000828254611c4b919061317b565b90915550506001810154600484018054600090611c6990849061317b565b909155505060078301805483908110611c8457611c8461300a565b60009182526020822060049091020181815560018082018390556002820192909255600301805460ff19169055810154611cbe9087613036565b9550505b80611ccc8161305c565b915050611bcd565b508060030154925080600401549150509450945094915050565b6000611cfb848484612288565b9050600081600401548260030154611d13919061317b565b905080600003611d24575050505050565b6040805160808101825260078401805480835260208084018681524295850195865260006060860181815260018086018755958252928120955160049485029096019586559051938501939093559351600284015592516003909201805460ff1916921515929092179091559083018054839290611da3908490613036565b90915550505050505050565b6000546001600160a01b03163314610a8b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610763565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006116a0848484612288565b81600401548260030154611e7a919061317b565b811115611fdf57600082600401548360030154611e97919061317b565b611ea1908361317b565b90508083600401541015611f065760405163885e287960e01b815260206004820152602560248201527f696e73756666696369656e742062616c616e636520696e2070656e64696e675260448201526419599d5b9960da1b6064820152608401610763565b80836004016000828254611f1a919061317b565b90915550506007830154600090611f339060019061317b565b90505b60008112611fdc576000846007018281548110611f5557611f5561300a565b60009182526020909120600490910201600381015490915060ff1615611f7b5750611fca565b82816001015411611f9c576001810154611f95908461317b565b9250611fba565b82816001016000828254611fb0919061317b565b9091555060009350505b82600003611fc85750611fdc565b505b80611fd48161318e565b915050611f36565b50505b80826003016000828254611ff3919061317b565b90915550506005548254604051631bb1482360e31b81526001600160a01b0391821660048201526024810184905291169063dd8a411890604401600060405180830381600087803b15801561204757600080fd5b505af115801561205b573d6000803e3d6000fd5b50508354600385015460048601546040805192835260208301919091523394506001600160a01b0390921692506000805160206131c2833981519152910160405180910390a3604051339082156108fc029083906000818181858888f193505050501580156120ce573d6000803e3d6000fd5b505050565b60006120df83836121f3565b90506120eb848261222b565b6120f55750505050565b6120ff848261244a565b50600081815260028086016020526040822080546001600160a01b031990811682556001820180549091169055908101829055600381018290556004810182905560058101829055600681018290559061215d600783016000612724565b61216b600883016000612745565b505050505050565b600061217e826122eb565b905061218a838261222b565b6121b2576040516304c76d3f60e11b81526001600160a01b0383166004820152602401610763565b6121bc8382612456565b50505050565b6000610486826124d3565b6000806121da84846124dd565b6000908152600285016020526040902091505092915050565b604080516001600160a01b03938416602080830191909152929093168382015280518084038201815260609093019052815191012090565b600061048383836124e9565b600080612243836122eb565b60008181526002860160205260409020909150612260858361222b565b6116a0576040516304c76d3f60e11b81526001600160a01b0385166004820152602401610763565b60008061229584846121f3565b600081815260028701602052604090209091506122b2868361222b565b6122e25760405163023280eb60e21b81526001600160a01b03808716600483015285166024820152604401610763565b95945050505050565b604080516001600160a01b038316602082015260009101604051602081830303815290604052805190602001209050919050565b600082815260028401602090815260408220835181546001600160a01b0319166001600160a01b0390911617815590830151839190600182019061236390826130bb565b506040820151600282019061237890826130bb565b50606082015160038201556080820151600482015560a0820151600582015560c082015160068201906123ab90826130bb565b5060e082015160078201906123c090826130bb565b506116a0915085905084612501565b6000868152600280890160205260409091206003810184905580546001600160a01b038089166001600160a01b03199283161783556001830180549189169190921617905590612425906005830190869061277f565b506008810161243483826130bb565b5061243f8888612501565b505050505050505050565b6000610483838361250d565b6000818152600283016020526040812080546001600160a01b0319168155816124826001830182612745565b612490600283016000612745565b6003820160009055600482016000905560058201600090556006820160006124b89190612745565b6124c6600783016000612745565b506104839050838361244a565b6000610486825490565b60006104838383612600565b60008181526001830160205260408120541515610483565b6000610483838361262a565b600081815260018301602052604081205480156125f657600061253160018361317b565b85549091506000906125459060019061317b565b90508181146125aa5760008660000182815481106125655761256561300a565b90600052602060002001549050808760000184815481106125885761258861300a565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806125bb576125bb6131ab565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610486565b6000915050610486565b60008260000182815481106126175761261761300a565b9060005260206000200154905092915050565b600081815260018301602052604081205461267157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610486565b506000610486565b60405180610100016040528060006001600160a01b03168152602001606081526020016060815260200160008152602001600081526020016000815260200160608152602001606081525090565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016127106127bd565b815260200160608152602001606081525090565b508054600082556004029060005260206000209081019061128d91906127db565b50805461275190612e1b565b6000825580601f10612761575050565b601f01602090049060005260206000209081019061128d9190612809565b82600281019282156127ad579160200282015b828111156127ad578235825591602001919060010190612792565b506127b9929150612809565b5090565b60405180604001604052806002906020820280368337509192915050565b5b808211156127b957600080825560018201819055600282015560038101805460ff191690556004016127dc565b5b808211156127b9576000815560010161280a565b8060005b60028110156121bc578151845260209384019390910190600101612822565b600081518084526020808501945080840160005b838110156128935781518051885283810151848901526040808201519089015260609081015115159088015260809096019590820190600101612855565b509495945050505050565b6000815180845260005b818110156128c4576020818501810151868301820152016128a8565b506000602082860101526020601f19601f83011685010191505092915050565b600061012060018060a01b038084511685528060208501511660208601525060408301516040850152606083015160608501526080830151608085015260a083015161293360a086018261281e565b5060c08301518160e086015261294b82860182612841565b91505060e08301518482036101008601526122e2828261289e565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156129bb57603f198886030184526129a98583516128e4565b9450928501929085019060010161298d565b5092979650505050505050565b80356001600160a01b03811681146129df57600080fd5b919050565b600080604083850312156129f757600080fd5b612a00836129c8565b9150612a0e602084016129c8565b90509250929050565b600060208284031215612a2957600080fd5b610483826129c8565b80516001600160a01b0316825260006101006020830151816020860152612a5b8286018261289e565b91505060408301518482036040860152612a75828261289e565b915050606083015160608501526080830151608085015260a083015160a085015260c083015184820360c0860152612aad828261289e565b91505060e083015184820360e08601526122e2828261289e565b6020815260006104836020830184612a32565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156129bb57603f19888603018452612b1d858351612a32565b94509285019290850190600101612b01565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612b5657600080fd5b813567ffffffffffffffff80821115612b7157612b71612b2f565b604051601f8301601f19908116603f01168101908282118183101715612b9957612b99612b2f565b81604052838152866020858801011115612bb257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008083601f840112612be457600080fd5b50813567ffffffffffffffff811115612bfc57600080fd5b602083019150836020828501011115612c1457600080fd5b9250929050565b600080600080600080600080600060c08a8c031215612c3957600080fd5b893567ffffffffffffffff80821115612c5157600080fd5b612c5d8d838e01612b45565b9a5060208c0135915080821115612c7357600080fd5b612c7f8d838e01612bd2565b909a50985060408c0135915080821115612c9857600080fd5b612ca48d838e01612bd2565b909850965060608c0135915080821115612cbd57600080fd5b50612cca8c828d01612bd2565b9a9d999c50979a96999598959660808101359660a09091013595509350505050565b60008060008060a08587031215612d0257600080fd5b612d0b856129c8565b9350612d19602086016129c8565b92506080850186811115612d2c57600080fd5b6040860192503567ffffffffffffffff811115612d4857600080fd5b612d5487828801612b45565b91505092959194509250565b60008060008060808587031215612d7657600080fd5b84359350612d86602086016129c8565b9250612d94604086016129c8565b9150612da2606086016129c8565b905092959194509250565b600060208284031215612dbf57600080fd5b813567ffffffffffffffff811115612dd657600080fd5b820160808185031215612de857600080fd5b9392505050565b600060208284031215612e0157600080fd5b5035919050565b60208152600061048360208301846128e4565b600181811c90821680612e2f57607f821691505b602082108103612e4f57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526021908201527f43616c6c6572206973206e6f7420746865206c656467657220636f6e747261636040820152601d60fa1b606082015260800190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60e081526000612ed260e083018d61289e565b8281036020840152612ee5818c8e612e96565b905089604084015288606084015287608084015282810360a0840152612f0c818789612e96565b905082810360c0840152612f21818587612e96565b9d9c50505050505050505050505050565b6000808335601e19843603018112612f4957600080fd5b83018035915067ffffffffffffffff821115612f6457600080fd5b6020019150600581901b3603821315612c1457600080fd5b81835260006001600160fb1b03831115612f9557600080fd5b8260051b80836020870137939093016020019392505050565b606081526000612fc2606083018789612f7c565b8281036020840152612fd5818688612f7c565b9150508260408301529695505050505050565b600060208284031215612ffa57600080fd5b81518015158114612de857600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561048657610486613020565b602081526000610483602083018461289e565b60006001820161306e5761306e613020565b5060010190565b601f8211156120ce57600081815260208120601f850160051c8101602086101561309c5750805b601f850160051c820191505b8181101561216b578281556001016130a8565b815167ffffffffffffffff8111156130d5576130d5612b2f565b6130e9816130e38454612e1b565b84613075565b602080601f83116001811461311e57600084156131065750858301515b600019600386901b1c1916600185901b17855561216b565b600085815260208120601f198616915b8281101561314d5788860151825594840194600190910190840161312e565b508582101561316b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561048657610486613020565b6000600160ff1b82016131a3576131a3613020565b506000190190565b634e487b7160e01b600052603160045260246000fdfe526824944047da5b81071fb6349412005c5da81380b336103fbe5dd34556c776a2646970667358221220dd6d0d38f8866ce0dc8313b0273f133ffd14b227f5f4e79c33ccdb1defaf54c764736f6c63430008140033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "AccountExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "AccountNotExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }];
        readonly name: "InvalidProofInputs";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "ServiceNotExist";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "pendingRefund";
            readonly type: "uint256";
        }];
        readonly name: "BalanceUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "timestamp";
            readonly type: "uint256";
        }];
        readonly name: "RefundRequested";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "service";
            readonly type: "address";
        }];
        readonly name: "ServiceRemoved";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "service";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "serviceType";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "url";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "inputPrice";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "outputPrice";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "updatedAt";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "model";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "verifiability";
            readonly type: "string";
        }];
        readonly name: "ServiceUpdated";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "accountExists";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[2]";
            readonly name: "signer";
            readonly type: "uint256[2]";
        }, {
            readonly internalType: "string";
            readonly name: "additionalInfo";
            readonly type: "string";
        }];
        readonly name: "addAccount";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "serviceType";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "url";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "model";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "verifiability";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "inputPrice";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "outputPrice";
            readonly type: "uint256";
        }];
        readonly name: "addOrUpdateService";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "batchVerifierAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "deleteAccount";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "depositFund";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "getAccount";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "pendingRefund";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "signer";
                readonly type: "uint256[2]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "createdAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "processed";
                    readonly type: "bool";
                }];
                readonly internalType: "struct Refund[]";
                readonly name: "refunds";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }];
            readonly internalType: "struct Account";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAllAccounts";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "pendingRefund";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[2]";
                readonly name: "signer";
                readonly type: "uint256[2]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "createdAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "processed";
                    readonly type: "bool";
                }];
                readonly internalType: "struct Refund[]";
                readonly name: "refunds";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "string";
                readonly name: "additionalInfo";
                readonly type: "string";
            }];
            readonly internalType: "struct Account[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAllServices";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "string";
                readonly name: "serviceType";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "url";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "outputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "updatedAt";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "model";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "verifiability";
                readonly type: "string";
            }];
            readonly internalType: "struct Service[]";
            readonly name: "services";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "getService";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "provider";
                readonly type: "address";
            }, {
                readonly internalType: "string";
                readonly name: "serviceType";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "url";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "inputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "outputPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "updatedAt";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "model";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "verifiability";
                readonly type: "string";
            }];
            readonly internalType: "struct Service";
            readonly name: "service";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_locktime";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_batchVerifierAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_ledgerAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "ledgerAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lockTime";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "processRefund";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "totalAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "pendingRefund";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "removeService";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "provider";
            readonly type: "address";
        }];
        readonly name: "requestRefundAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256[]";
                readonly name: "inProof";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "proofInputs";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256";
                readonly name: "numChunks";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "segmentSize";
                readonly type: "uint256[]";
            }];
            readonly internalType: "struct VerifierInput";
            readonly name: "verifierInput";
            readonly type: "tuple";
        }];
        readonly name: "settleFees";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_batchVerifierAddress";
            readonly type: "address";
        }];
        readonly name: "updateBatchVerifierAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_locktime";
            readonly type: "uint256";
        }];
        readonly name: "updateLockTime";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): InferenceServingInterface;
    static connect(address: string, runner?: ContractRunner | null): InferenceServing;
}
export {};
//# sourceMappingURL=InferenceServing__factory.d.ts.map